{
  "_from": "mongoose-datatables@3.2.0",
  "_id": "mongoose-datatables@3.2.0",
  "_inBundle": false,
  "_integrity": "sha512-7yKBloJGTmCSqbTv2l8QdaC2V55L79QOUBGDbYdvw8aRvQQp6lRv7Una2Dki8ZlBHnCUMG4paGPH9q0tUZga6A==",
  "_location": "/mongoose-datatables",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "mongoose-datatables",
    "fetchSpec": "3.2.0",
    "name": "mongoose-datatables",
    "raw": "mongoose-datatables@3.2.0",
    "rawSpec": "3.2.0",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mongoose-datatables/-/mongoose-datatables-3.2.0.tgz",
  "_shasum": "38206b0284be61616f6b1f7f8bea49d1415a08d5",
  "_shrinkwrap": null,
  "_spec": "mongoose-datatables@3.2.0",
  "_where": "/home/kev/express/finditkenya",
  "author": {
    "name": "Antonio Sandoval"
  },
  "bugs": {
    "url": "https://github.com/archr/mongoose-datatables/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Server side dataTable request",
  "devDependencies": {
    "body-parser": "^1.12.0",
    "chai": "^2.1.0",
    "express": "^4.12.0",
    "mocha": "^5.0.1",
    "mongoose": ">=3.8"
  },
  "engines": {
    "node": ">=4"
  },
  "homepage": "https://github.com/archr/mongoose-datatables",
  "keywords": [
    "datatable",
    "mongoose"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "mongoose-datatables",
  "optionalDependencies": {},
  "peerDependencies": {
    "mongoose": ">=3.8"
  },
  "readme": "# mongoose-datatables\n\nServer side table request.\n\n[![Build Status](https://travis-ci.org/archr/mongoose-datatables.svg)](https://travis-ci.org/archr/mongoose-datatables)\n\n## Installation\n```sh\n$ npm install mongoose-datatables\n```\n\n## Usage\nConfigure the plugin in your model\n\n```javascript\nvar mongoose = require('mongoose')\nvar dataTables = require('mongoose-datatables')\nvar Schema = mongoose.Schema\n\nvar UserSchema = new Schema({\n  first_name: String,\n  last_name: String,\n  username: String\n})\n\nUserSchema.plugin(dataTables)\n```\nUse plugin in your route\n\n```javascript\napp.post('/table', (req, res) {\n  User.dataTables({\n    limit: req.body.length,\n    skip: req.body.start,\n    search: {\n      value: req.body.search.value,\n      fields: ['username']\n    },\n    sort: {\n      username: 1\n    }\n  }).then(function (table) {\n    res.json(table); // table.total, table.data\n  })\n});\n```\n\n## API\n\n### plugin([options])\n* `options.totalKey` (String) - Default total\n* `options.dataKey` (String) - Default data\n* `options.formatters` (Object) - Specifies multiple formatters that can be used in the query\n\n### dataTables([options], [callback])\n* `options.limit` (Number) - Specifies mongo limit.\n* `options.skip` (Number) - Specifies mongo skip.\n* `options.find` (Object) - Specifies selection criteria.\n* `options.select` (Object) - Specifies the fields to return.\n* `options.sort` (Object) - Specifies the order in which the query returns matching documents.\n* `options.order`, `options.columns` (Array), (Array) - Specifies the order in which the query returns matching documents and replace the sort option\n* `options.search` (Object) - Search.\n* `options.populate` (Object) - Specifies models to populate.\n* `options.formatter` (String|Function) - Specifies formatter to use after the query.\n\n\n### Formaters\n\nAt query level\n```javascript\nUser.dataTables({\n  limit: 20,\n  formatter: function(user) {\n    return {\n      name: user.first_name + ' ' + user.last_name\n    }\n  }\n})\n```\n\nAt schema level\n```javascript\nUserSchema.plugin(dataTables, {\n  formatters: {\n    toPublic : function (user) {\n      return {\n        name: user.first_name + ' ' + user.last_name\n      }\n    }\n  }\n});\n```\n\nUse by doing this at query level\n```javascript\nUser.dataTables({\n  limit: 20,\n  formatter: 'toPublic',\n})\n```\n**Note:** if you use formatters you get an array of objects on data, instead of the model instance.\n\n\n## License\nMIT \n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/archr/mongoose-datatables.git"
  },
  "scripts": {
    "test": "mocha --exit"
  },
  "version": "3.2.0"
}
