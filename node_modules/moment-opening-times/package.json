{
  "_from": "moment-opening-times@2.9.0",
  "_id": "moment-opening-times@2.9.0",
  "_inBundle": false,
  "_integrity": "sha512-TmyWv7DjMjghBSo1Jwp7faZsdp6DCO6Ot+KvzFrjoE5lmxK4WWcg9c0Oo4kcN8FggzXBmN7huhlcpFy16MveOA==",
  "_location": "/moment-opening-times",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "moment-opening-times",
    "fetchSpec": "2.9.0",
    "name": "moment-opening-times",
    "raw": "moment-opening-times@2.9.0",
    "rawSpec": "2.9.0",
    "registry": true,
    "saveSpec": null,
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/moment-opening-times/-/moment-opening-times-2.9.0.tgz",
  "_shasum": "c05b7a6b70f19114dd21cb3e04cb2216ff2bb5f7",
  "_shrinkwrap": null,
  "_spec": "moment-opening-times@2.9.0",
  "_where": "/home/kev/express/finditkenya",
  "author": {
    "name": "Neil McLaughlin"
  },
  "bugs": {
    "url": "https://github.com/nhsuk/moment-opening-times/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Neil McLaughlin",
      "url": "https://github.com/neilbmclaughlin"
    },
    {
      "name": "Steven Hunt",
      "url": "https://github.com/st3v3nhunt"
    },
    {
      "name": "Mark Harrop",
      "url": "https://github.com/markysoft"
    }
  ],
  "dependencies": {
    "eslint-config-nhsuk": "^0.14.0",
    "moment": "^2.0.0",
    "moment-timezone": "^0.5.0"
  },
  "deprecated": false,
  "description": "A small class to determine the status of a given moment in relation to a set of opening times",
  "devDependencies": {
    "chai": "^4.0.0",
    "chai-moment": "^0.1.0",
    "coveralls": "^3.0.0",
    "eslint": "^4.0.0",
    "eslint-config-airbnb-base": "^12.0.0",
    "eslint-plugin-import": "^2.0.0",
    "eslint-plugin-json": "^1.0.0",
    "eslint-plugin-mocha": "^5.0.0",
    "eslint-watch": "^3.0.0",
    "husky": "^0.14.0",
    "istanbul": "^0.4.0",
    "mocha": "^5.0.0",
    "mocha-lcov-reporter": "^1.0.0"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/nhsuk/moment-opening-times#readme",
  "keywords": [
    "moment",
    "opening",
    "times"
  ],
  "license": "MIT",
  "main": "OpeningTimes.js",
  "name": "moment-opening-times",
  "optionalDependencies": {},
  "peerDependencies": {
    "moment": ">=2.0.0",
    "moment-timezone": ">=0.5.0"
  },
  "readme": "# moment-opening-times\n\n[![GitHub Release](https://img.shields.io/github/release/nhsuk/moment-opening-times.svg)](https://github.com/nhsuk/moment-opening-times/releases/latest/)\n[![npm version](https://badge.fury.io/js/moment-opening-times.svg)](https://badge.fury.io/js/moment-opening-times)\n[![Greenkeeper badge](https://badges.greenkeeper.io/nhsuk/moment-opening-times.svg)](https://greenkeeper.io/)\n[![Build Status](https://travis-ci.org/nhsuk/moment-opening-times.svg?branch=master)](https://travis-ci.org/nhsuk/moment-opening-times)\n[![Coverage Status](https://coveralls.io/repos/github/nhsuk/moment-opening-times/badge.svg?branch=master)](https://coveralls.io/github/nhsuk/moment-opening-times?branch=master)\n\n> Given a set of opening times (with optional alternative opening times) return a status indicating openness.\n\n## Installation\n\nTo install the package run:\n\n* npm - `npm install moment-opening-times --save`\n* yarn - `yarn add moment-opening-times`\n\nThis package relies upon several other packages. These are the\n[Peer Dependencies](https://nodejs.org/en/blog/npm/peer-dependencies/).\nTo get a list of the peerDependencies run the following command:\n\n```\nnpm info moment-opening-times peerDependencies\n```\n\nAll peerDependencies need to be installed.\n\n## Usage\n\nThe class is instantiated with 3 arguments. The third argument is optional and\nrepresents a set of opening times classified as alterations. Once instantiated\nthe function `getStatus` is passed the current time and an optional options object.\nCurrently the only valid option is a boolean field - `next`. When\n`next` set to a truthy value the returned object will contain 2 additional\nfields, `nextClosed` and `nextOpen`. Both fields are a\n[moment with a time zone](https://momentjs.com/timezone/docs/#/using-timezones/parsing-in-zone/)\nindicating the next time the place is closed and open, respectively.\n\n### Example usage\n\nGiven the open hours of a place is represented by the following set of opening times:\n```js\nconst openingTimes =\n{\n  sunday:    [ { opens: '09:00', closes: '17:30' } ],\n  monday:    [ { opens: '08:00', closes: '11:00' }, { opens: '13:00', closes: '15:00' }, { opens: '17:00', closes: '19:00' } ],\n  tuesday:   [ { opens: '09:00', closes: '17:30' } ],\n  wednesday: [ { opens: '09:00', closes: '12:00' }, { opens: '14:00', closes: '18:00' } ],\n  thursday:  [ { opens: '09:00', closes: '17:00' }, { opens: '18:00', closes: '21:00' } ],\n  friday:    [ { opens: '09:00', closes: '17:30' } ],\n  saturday:  [ { opens: '09:00', closes: '17:30' } ],\n}\n```\n\nIn order to find out if the place is open now in the `Europe/London` time zone\nthe following code can be used:\n```js\nconst moment = require('moment');\nconst OpeningTimes = require('moment-opening-times');\n\nconst now = moment();\nconst openingTimesMoment = new OpeningTimes(openingTimes, 'Europe/London');\n\nconst status = openingTimesMoment.getStatus(now);\n```\n\nIf we wanted to know whether the place was open at 23:59:59 on 31/12/2020 in\n`Indian/Christmas` the code would be:\n```js\nconst moment = require('moment');\nconst OpeningTimes = require('moment-opening-times');\n\nconst dateToCheck = moment('2020-12-31 23:59:59');\nconst openingTimesMoment = new OpeningTimes(openingTimes, 'Indian/Christmas');\n\nconst status = openingTimesMoment.getStatus(dateToCheck);\n```\n\nFor more detailed use cases, check out the [test suite](test/).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nhsuk/moment-opening-times.git"
  },
  "scripts": {
    "coverage-check": "istanbul check-coverage --config .istanbul.yml",
    "coverage-generate": "istanbul cover _mocha -- --recursive test",
    "coverage-upload": "cat ./coverage/lcov.info | coveralls",
    "git-hook": "yarn lint && yarn coverage-generate && yarn coverage-check",
    "lint": "eslint --ext .js --max-warnings 0 .",
    "precommit": "yarn git-hook",
    "prepush": "yarn git-hook",
    "test": "TZ=GMT mocha --recursive test/unit",
    "test-ci": "yarn git-hook && yarn coverage-upload",
    "test-watch": "yarn test -- --watch --reporter min"
  },
  "version": "2.9.0"
}
